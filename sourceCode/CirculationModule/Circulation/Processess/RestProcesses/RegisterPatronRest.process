<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.example.org/Circulation" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <xsd:import namespace="http://www.example.org/Circulation" schemaLocation="/SharedResources/Schemas/Circulation.xsd"/>
    <pd:name>Processess/RestProcesses/RegisterPatronRest.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="payload" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>89</pd:startX>
    <pd:startY>113</pd:startY>
    <pd:returnBindings>
        <root>
            <payload>
                <xsl:value-of select="$Render-JSON/ns2:ActivityOutputClass/jsonString"/>
            </payload>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="payload" type="xsd:string"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>745</pd:endX>
    <pd:endY>122</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1679047556961</pd:targetNamespace>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>221</pd:x>
        <pd:y>119</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ActivityOutputEditor ref="ns:RegisterPatronsReq"/>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Start/root/payload"/>
                </jsonString>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>532</pd:x>
        <pd:y>120</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor>
                <xsd:element name="group">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element ref="ns:RegisterPatronsRes" minOccurs="0"/>
                            <xsd:element ref="ns:fault" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityInputEditor>
        </config>
        <pd:inputBindings>
            <ns2:ActivityInputClass>
                <xsl:choose>
                    <xsl:when test="exists($RegisterPatronMain/group/ns:fault)">
                        <group>
                            <ns:fault>
                                <ns:FaultCode>
                                    <xsl:value-of select="if(contains($RegisterPatronMain/group/ns:fault/ns:FaultCode,concat($_globalVariables/ns1:GlobalVariables/CodeSep,$_globalVariables/ns1:GlobalVariables/BadReq))) &#xA;then &#xA;substring-before($RegisterPatronMain/group/ns:fault/ns:FaultCode,concat($_globalVariables/ns1:GlobalVariables/CodeSep,$_globalVariables/ns1:GlobalVariables/BadReq) ) &#xA; else $RegisterPatronMain/group/ns:fault/ns:FaultCode"/>
                                </ns:FaultCode>
                                <xsl:if test="$RegisterPatronMain/group/ns:fault/ns:FaultMsg">
                                    <ns:FaultMsg>
                                        <xsl:value-of select="$RegisterPatronMain/group/ns:fault/ns:FaultMsg"/>
                                    </ns:FaultMsg>
                                </xsl:if>
                            </ns:fault>
                        </group>
                    </xsl:when>
                    <xsl:otherwise>
                        <group>
                            <xsl:copy-of select="$RegisterPatronMain/group/ns:RegisterPatronsRes"/>
                        </group>
                    </xsl:otherwise>
                </xsl:choose>
            </ns2:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="RegisterPatronMain">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>376</pd:x>
        <pd:y>119</pd:y>
        <config>
            <processName>/Processess/MainProcesses/RegisterPatronMain.process</processName>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$Parse-JSON/ns2:ActivityOutputClass/ns:RegisterPatronsReq"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>RegisterPatronMain</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>RegisterPatronMain</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>